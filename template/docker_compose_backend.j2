services:
  {{ company_name }}-backedbase:
    build:
      context: .
      dockerfile: BackEnd.Dockerfile
    restart: always
    volumes:
      - .env:/backedbase/.env
    depends_on:
      - {{ company_name }}-postgres
      - {{ company_name }}-redis
    networks:
      - nginx_network
      - {{ company_name }}-network  
  {{ company_name }}-postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: postgres -c 'max_connections=10000'
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - nginx_network
      - {{ company_name }}-network
  {{ company_name }}-redis:
    image: "redis:latest"
    restart: always
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - nginx_network
      - {{ company_name }}-network
  {{ company_name }}-bot:
    build:
      context: .
      dockerfile: BotRiche.Dockerfile
    restart: always
    networks:
      - nginx_network
      - {{ company_name }}-network
  {{ company_name }}-minio:
    image: quay.io/minio/minio:latest
    environment:
      MINIO_ROOT_USER: "riche-minio"
      MINIO_ROOT_PASSWORD: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    volumes:
      - "./data:/data"
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - {{ company_name }}-network

networks:
  {{ company_name }}-network:
    external: true
  nginx_network:
    external: true
